services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    platform: linux/amd64
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
  migrate:
    image: migrate/migrate:latest
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./internal/infra/database/migrations:/migrations:delegated
    command: [
      "-path", "/migrations",
      "-database", "mysql://root:root@tcp(mysql:3306)/orders?charset=utf8mb4&parseTime=true",
      "up"
    ]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: always
    depends_on:
      - migrate
    ports:
      - "8000:8000"
      - "8080:8080"
      - "50051:50051"
    environment:
      DB_HOST: mysql
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: orders
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      DB_DRIVER: mysql
      WEB_SERVER_PORT: 8000
      GRPC_SERVER_PORT: 50051
      GRAPHQL_SERVER_PORT: 8081


volumes:
  mysql_data:
